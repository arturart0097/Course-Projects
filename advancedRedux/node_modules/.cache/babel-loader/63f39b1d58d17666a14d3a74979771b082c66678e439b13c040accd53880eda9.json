{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: []\n  },\n  reducers: {\n    addItemHandler(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(el => el.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          quantity: 1,\n          price: newItem.price,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemHandler(state, action) {\n      const selectItem = action.payload;\n      const existingItem = state.items.filter(el => el.id !== selectItem.id);\n      if (existingItem) {\n        quantity;\n      }\n    }\n  }\n});\nconst store = configureStore({\n  reducer: cartSlice.reducer\n});\nexport const cartActions = cartSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","cartSlice","name","initialState","items","reducers","addItemHandler","state","action","newItem","payload","existingItem","find","el","id","push","title","quantity","price","totalPrice","removeItemHandler","selectItem","filter","store","reducer","cartActions","actions"],"sources":["C:/Users/Artur/OneDrive/Робочий стіл/qwer/js/react/courseProjects/advancedRedux/src/components/store/index.jsx"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n  },\r\n  reducers: {\r\n    addItemHandler(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((el) => el.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          quantity: 1,\r\n          price: newItem.price,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemHandler(state, action) {\r\n      const selectItem = action.payload;\r\n      const existingItem = state.items.filter((el) => el.id !== selectItem.id);\r\n      if (existingItem) {\r\n        quantity\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: cartSlice.reducer,\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACH,KAAK,CAACQ,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACnE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACH,KAAK,CAACW,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAET,OAAO,CAACS,KAAK;UACpBC,UAAU,EAAEV,OAAO,CAACS;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLP,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACS,KAAK;MACnE;IACF,CAAC;IACDE,iBAAiBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC/B,MAAMa,UAAU,GAAGb,MAAM,CAACE,OAAO;MACjC,MAAMC,YAAY,GAAGJ,KAAK,CAACH,KAAK,CAACkB,MAAM,CAAET,EAAE,IAAKA,EAAE,CAACC,EAAE,KAAKO,UAAU,CAACP,EAAE,CAAC;MACxE,IAAIH,YAAY,EAAE;QAChBM,QAAQ;MACV;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMM,KAAK,GAAGxB,cAAc,CAAC;EAC3ByB,OAAO,EAAEvB,SAAS,CAACuB;AACrB,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAE5C,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}