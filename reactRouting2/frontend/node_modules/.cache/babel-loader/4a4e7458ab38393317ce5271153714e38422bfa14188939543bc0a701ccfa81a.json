{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\OneDrive\\\\\\u0420\\u043E\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u0456\\u043B\\\\qwer\\\\js\\\\react\\\\courseProjects\\\\reactRouting2\\\\frontend\\\\src\\\\pages\\\\Events.jsx\";\n// import { useEffect, useState } from \"react\";\n\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n  //     const response = await fetch(\"http://localhost:8080/events\");\n\n  //     if (!response.ok) {\n  //       setError(\"Fetching events failed.\");\n  //     } else {\n  //       const resData = await response.json();\n  //       setFetchedEvents(resData.events);\n  //     }\n  //     setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","children","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Artur/OneDrive/Робочий стіл/qwer/js/react/courseProjects/reactRouting2/frontend/src/pages/Events.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [fetchedEvents, setFetchedEvents] = useState();\r\n  // const [error, setError] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchEvents() {\r\n  //     setIsLoading(true);\r\n  //     const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  //     if (!response.ok) {\r\n  //       setError(\"Fetching events failed.\");\r\n  //     } else {\r\n  //       const resData = await response.json();\r\n  //       setFetchedEvents(resData.events);\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //   }\r\n\r\n  //   fetchEvents();\r\n  // }, []);\r\n  return (\r\n    <>\r\n      {/* <div style={{ textAlign: \"center\" }}>\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n      </div>\r\n      {!isLoading && fetchedEvents &&  */}\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAMEJ,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACC,EAAA,GA/BQP,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}