{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    reset(state) {\n      state.counter = 0;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isShowAuth: true\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n\n// const reduceCounter = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"reset\") {\n//     return {\n//       counter: 0,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// export const store = createStore(reduceCounter);","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","decrement","reset","toggle","initialAuthState","isShowAuth","authSlice","store","reducer","counterActions","actions"],"sources":["C:/Users/Artur/OneDrive/Робочий стіл/qwer/js/react/courseProjects/redux/src/components/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    reset(state) {\r\n      state.counter = 0;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = { isShowAuth: true }\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  \r\n})\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n// const reduceCounter = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.value,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"reset\") {\r\n//     return {\r\n//       counter: 0,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// export const store = createStore(reduceCounter);\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAC7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACtBF,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,SAASA,CAACJ,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDY,KAAKA,CAACL,KAAK,EAAE;MACXA,KAAK,CAACP,OAAO,GAAG,CAAC;IACnB,CAAC;IACDa,MAAMA,CAACN,KAAK,EAAE;MACZA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMa,gBAAgB,GAAG;EAAEC,UAAU,EAAE;AAAK,CAAC;AAC7C,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEU;AAEhB,CAAC,CAAC;AAEF,MAAMG,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAE;IACPlB,OAAO,EAAEE,YAAY,CAACgB;EACxB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAElD,eAAeH,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}